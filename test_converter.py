#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ –±–µ–∑ Telegram –±–æ—Ç–∞.
"""
import asyncio
import tempfile
from pathlib import Path
from converter.converter import BookConverter

async def test_converter():
    """–¢–µ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ —Å –¥–µ–º–æ-—Ñ–∞–π–ª–æ–º."""
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTML —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_html = """
<!DOCTYPE html>
<html>
<head>
    <title>–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞</title>
    <meta charset="utf-8">
</head>
<body>
    <h1>–ì–ª–∞–≤–∞ 1: –í–≤–µ–¥–µ–Ω–∏–µ</h1>
    <p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞.</p>
    <p>–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä —Å–ø–æ—Å–æ–±–µ–Ω –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –∫–Ω–∏–≥–∏ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏.</p>
    
    <h2>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h2>
    <ul>
        <li>–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è PDF –≤ EPUB</li>
        <li>–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è EPUB –≤ MOBI</li>
        <li>–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è FB2 –≤ PDF</li>
        <li>–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!</li>
    </ul>
    
    <h1>–ì–ª–∞–≤–∞ 2: –ó–∞–∫–ª—é—á–µ–Ω–∏–µ</h1>
    <p>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!</p>
</body>
</html>
    """
    
    converter = BookConverter()
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π HTML —Ñ–∞–π–ª
    with tempfile.NamedTemporaryFile(mode='w', suffix='.html', delete=False, encoding='utf-8') as f:
        f.write(test_html)
        input_path = Path(f.name)
    
    try:
        print(f"üîÑ –¢–µ—Å—Ç–∏—Ä—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é HTML -> EPUB...")
        print(f"üìÇ –í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {input_path}")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ EPUB
        output_path = await converter.convert(input_path, 'epub')
        
        if output_path and output_path.exists():
            print(f"‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìÑ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {output_path}")
            print(f"üìä –†–∞–∑–º–µ—Ä: {output_path.stat().st_size // 1024} –ö–ë")
            
            # –£–¥–∞–ª—è–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
            output_path.unlink()
            print("üóëÔ∏è –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
        if input_path.exists():
            input_path.unlink()
            print("üóëÔ∏è –í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ –∫–Ω–∏–≥...")
    asyncio.run(test_converter())
    print("‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
