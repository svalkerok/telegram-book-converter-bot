"""
–ú–æ–¥—É–ª—å —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏.
"""
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Set
from config import SUPPORTED_OUTPUT_FORMATS


def create_format_keyboard(
    current_format: str,
    exclude_formats: Set[str] = None
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.
    
    Args:
        current_format: –¢–µ–∫—É—â–∏–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
        exclude_formats: –§–æ—Ä–º–∞—Ç—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤
    """
    exclude = exclude_formats or {current_format}
    buttons = []
    
    for format_key, format_name in SUPPORTED_OUTPUT_FORMATS.items():
        if format_key not in exclude:
            buttons.append(
                InlineKeyboardButton(
                    text=f"üìÑ {format_name}",
                    callback_data=f"convert:{format_key}"
                )
            )
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    keyboard = []
    for i in range(0, len(buttons), 2):
        keyboard.append(buttons[i:i+2])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    keyboard.append([
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
