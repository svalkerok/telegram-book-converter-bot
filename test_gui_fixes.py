#!/usr/bin/env python3
"""
üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π GUI
Quick test for GUI fixes
"""

def test_gui_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã GUI"""
    try:
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
        
        import customtkinter
        print(f"‚úÖ CustomTkinter {customtkinter.__version__}")
        
        import requests
        print(f"‚úÖ requests {requests.__version__}")
        
        import gui_safety
        print("‚úÖ gui_safety –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö –∫–ª–∞—Å—Å–æ–≤
        validator = gui_safety.TokenValidator()
        print("‚úÖ TokenValidator —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞
        valid, msg = validator.validate_token_format("123456789:AABBccddEEffgghhIIjjKKllmmNN")
        print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞: {valid} - {msg}")
        
        invalid, msg = validator.validate_token_format("invalid")
        print(f"‚úÖ –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: {invalid} - {msg}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

def test_gui_syntax():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å GUI —Ñ–∞–π–ª–∞"""
    try:
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ bot_gui.py...")
        
        with open('bot_gui.py', 'r', encoding='utf-8') as f:
            code = f.read()
        
        compile(code, 'bot_gui.py', 'exec')
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å bot_gui.py –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –∫–ª—é—á–µ–≤—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        if "self._closing" in code:
            print("‚úÖ –§–ª–∞–≥ _closing –¥–æ–±–∞–≤–ª–µ–Ω")
        
        if "WM_DELETE_WINDOW" in code:
            print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω")
        
        if "safe_after" in code or "self.root.after" in code:
            print("‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ GUI –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        
        return True
        
    except SyntaxError as e:
        print(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π GUI")
    print("=" * 40)
    
    success = True
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
    if not test_gui_imports():
        success = False
    
    # –¢–µ—Å—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    if not test_gui_syntax():
        success = False
    
    print("\n" + "=" * 40)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
        print("   ‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ")
        print("   ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–æ–Ω")
        print("   ‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ GUI")
        print("   ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
        print("\nüöÄ GUI –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
    
    return success

if __name__ == "__main__":
    main()
