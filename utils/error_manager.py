"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –æ—à–∏–±–æ–∫ —Å —Å–∏—Å—Ç–µ–º–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.
"""
import logging
import uuid
from datetime import datetime
from enum import Enum
from typing import Optional, Dict, Any

logger = logging.getLogger(__name__)


class ErrorCode(Enum):
    """–ö–æ–¥—ã –æ—à–∏–±–æ–∫ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏."""
    
    # –û—à–∏–±–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ (100-199)
    CONVERSION_FAILED = 101
    CONVERSION_TIMEOUT = 102
    CONVERSION_INVALID_FORMAT = 103
    CONVERSION_CORRUPTED_FILE = 104
    CONVERSION_MEMORY_ERROR = 105
    
    # –û—à–∏–±–∫–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã (200-299)
    FILE_NOT_FOUND = 201
    FILE_ACCESS_DENIED = 202
    FILE_TOO_LARGE = 203
    FILE_INVALID_TYPE = 204
    
    # –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (300-399)
    VALIDATION_FAILED = 301
    VALIDATION_UNSUPPORTED_FORMAT = 302
    VALIDATION_EMPTY_FILE = 303
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏ (400-499)
    SYSTEM_OUT_OF_MEMORY = 401
    SYSTEM_DISK_FULL = 402
    SYSTEM_CALIBRE_ERROR = 403
    
    # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏ (500-599)
    UNKNOWN_ERROR = 501


class ErrorManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ ID."""
    
    def __init__(self):
        self.error_log: Dict[str, Dict[str, Any]] = {}
    
    def generate_error_id(self) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –æ—à–∏–±–∫–∏."""
        return f"ERR-{datetime.now().strftime('%Y%m%d')}-{str(uuid.uuid4())[:8].upper()}"
    
    def log_error(self, 
                  error_code: ErrorCode, 
                  exception: Optional[Exception] = None,
                  context: Optional[Dict[str, Any]] = None,
                  user_id: Optional[int] = None) -> str:
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID.
        
        Args:
            error_code: –ö–æ–¥ –æ—à–∏–±–∫–∏
            exception: –ò—Å–∫–ª—é—á–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
            context: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
        Returns:
            –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –æ—à–∏–±–∫–∏
        """
        error_id = self.generate_error_id()
        
        error_info = {
            'error_code': error_code,
            'timestamp': datetime.now().isoformat(),
            'exception': str(exception) if exception else None,
            'exception_type': type(exception).__name__ if exception else None,
            'context': context or {},
            'user_id': user_id
        }
        
        self.error_log[error_id] = error_info
        
        # –õ–æ–≥–∏—Ä—É–µ–º –≤ —Ñ–∞–π–ª
        logger.error(
            f"Error {error_id}: Code={error_code.value} ({error_code.name}), "
            f"Exception={exception}, Context={context}, User={user_id}"
        )
        
        return error_id
    
    def get_user_message(self, error_code: ErrorCode, error_id: str) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        
        Args:
            error_code: –ö–æ–¥ –æ—à–∏–±–∫–∏
            error_id: ID –æ—à–∏–±–∫–∏
            
        Returns:
            –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        base_messages = {
            ErrorCode.CONVERSION_FAILED: {
                'title': '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª',
                'causes': [
                    '‚Ä¢ –§–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É',
                    '‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏',
                    '‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏—Å—Ö–æ–¥–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º'
                ],
                'solutions': [
                    '‚Ä¢ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏',
                    '‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª –Ω–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å', 
                    '‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ'
                ]
            },
            ErrorCode.CONVERSION_TIMEOUT: {
                'title': '‚è∞ –¢–∞–π–º–∞—É—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏',
                'causes': [
                    '‚Ä¢ –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏',
                    '‚Ä¢ –°–ª–æ–∂–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞',
                    '‚Ä¢ –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
                ],
                'solutions': [
                    '‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞',
                    '‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ',
                    '‚Ä¢ –†–∞–∑–±–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ —á–∞—Å—Ç–∏'
                ]
            },
            ErrorCode.FILE_TOO_LARGE: {
                'title': 'üì¶ –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π',
                'causes': [
                    '‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç (50 –ú–ë)',
                    '‚Ä¢ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
                    '‚Ä¢ –ù–µ—Å–∂–∞—Ç—ã–π —Ñ–æ—Ä–º–∞—Ç'
                ],
                'solutions': [
                    '‚Ä¢ –°–∂–∞—Ç—å —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π',
                    '‚Ä¢ –£–¥–∞–ª–∏—Ç—å –ª–∏—à–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
                    '‚Ä¢ –†–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤'
                ]
            },
            ErrorCode.VALIDATION_UNSUPPORTED_FORMAT: {
                'title': 'üö´ –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç',
                'causes': [
                    '‚Ä¢ –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è',
                    '‚Ä¢ –ù–µ–≤–µ—Ä–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞',
                    '‚Ä¢ –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ'
                ],
                'solutions': [
                    '‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤',
                    '‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç',
                    '‚Ä¢ –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞'
                ]
            }
        }
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
        message_data = base_messages.get(error_code, {
            'title': '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞',
            'causes': ['‚Ä¢ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ'],
            'solutions': ['‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ', '‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É']
        })
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        causes_text = '\n'.join(message_data['causes'])
        solutions_text = '\n'.join(message_data['solutions'])
        
        return (
            f"{message_data['title']}\n\n"
            f"üîç *–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:*\n{causes_text}\n\n"
            f"üí° *–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:*\n{solutions_text}\n\n"
            f"üÜî *–ö–æ–¥ –æ—à–∏–±–∫–∏:* `{error_code.value}` | *ID:* `{error_id}`\n"
            f"üìû –ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —É–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥"
        )


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ—à–∏–±–æ–∫
error_manager = ErrorManager()
